//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManualEFTProcessingSystem.UATRemitServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UATRemitServiceReference.RemitServiceSoap")]
    public interface RemitServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AccountEnquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode AccountEnquiry(int partyId, string userId, string password, string accountNo, string beneficiaryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AccountEnquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> AccountEnquiryAsync(int partyId, string userId, string password, string accountNo, string beneficiaryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PartyAccountAvailableBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode PartyAccountAvailableBalance(int partyId, string userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PartyAccountAvailableBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> PartyAccountAvailableBalanceAsync(int partyId, string userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Payment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Payment(
                    string msgtype, 
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryName, 
                    string senderName, 
                    string senderPhoneNo, 
                    string senderAddress, 
                    string senderCountry, 
                    string bankId, 
                    string branchId, 
                    System.DateTime paymentDate, 
                    string transferCurrency, 
                    decimal Amount, 
                    string benfcryinfo, 
                    string msgToBenfcry, 
                    string msgSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Payment", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> PaymentAsync(
                    string msgtype, 
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryName, 
                    string senderName, 
                    string senderPhoneNo, 
                    string senderAddress, 
                    string senderCountry, 
                    string bankId, 
                    string branchId, 
                    System.DateTime paymentDate, 
                    string transferCurrency, 
                    decimal Amount, 
                    string benfcryinfo, 
                    string msgToBenfcry, 
                    string msgSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BEFTNPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode BEFTNPayment(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryAccountType, 
                    string benfcryName, 
                    string benfcryBankName, 
                    string benfcryBranchName, 
                    string routingNumber, 
                    string benfcryAddress, 
                    string senderName, 
                    string senderAddress, 
                    string transferCurrency, 
                    decimal Amount, 
                    string PaymentDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BEFTNPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> BEFTNPaymentAsync(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryAccountType, 
                    string benfcryName, 
                    string benfcryBankName, 
                    string benfcryBranchName, 
                    string routingNumber, 
                    string benfcryAddress, 
                    string senderName, 
                    string senderAddress, 
                    string transferCurrency, 
                    decimal Amount, 
                    string PaymentDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OTCPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode OTCPayment(int partyId, string userId, string password, string RefNo, string senderName, string senderPhoneNo, string senderAddress, string benfcryName, string benfcryAddress, string benfcryMobileno, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OTCPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> OTCPaymentAsync(int partyId, string userId, string password, string RefNo, string senderName, string senderPhoneNo, string senderAddress, string benfcryName, string benfcryAddress, string benfcryMobileno, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StatusEnquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode StatusEnquiry(string msgtype, int partyId, string userId, string password, string RefNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StatusEnquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> StatusEnquiryAsync(string msgtype, int partyId, string userId, string password, string RefNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MobileWalletBeneficiaryValidationRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode MobileWalletBeneficiaryValidationRequest(int partyId, string userId, string password, string msisdn, string firstName, string lastName, string fullName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MobileWalletBeneficiaryValidationRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> MobileWalletBeneficiaryValidationRequestAsync(int partyId, string userId, string password, string msisdn, string firstName, string lastName, string fullName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MobileWalletBeneficiaryValidationResponse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode MobileWalletBeneficiaryValidationResponse(int partyId, string userId, string password, string ValidationResponseCallingReferanceNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MobileWalletBeneficiaryValidationResponse", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> MobileWalletBeneficiaryValidationResponseAsync(int partyId, string userId, string password, string ValidationResponseCallingReferanceNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MobileWalletPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode MobileWalletPayment(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string ConversationID, 
                    string OriginateCountry, 
                    string OriginateCurrency, 
                    string ReceiverMSISDN, 
                    decimal SendingAmount, 
                    string ForexRate, 
                    string RecevingAmount, 
                    string SenderFirstName, 
                    string SenderLastName, 
                    string SenderMSISDN, 
                    string SenderDOB, 
                    string SenderPOB, 
                    string SenderDocumentType, 
                    string SenderDocumentNumber, 
                    string SenderIDIssueDate, 
                    string SenderIDExpiryDate, 
                    string SenderAddress, 
                    string SenderNationality, 
                    string SenderkycPurpose, 
                    string SenderkycSourceOfFunds, 
                    string SenderLocation, 
                    string PaymentInstrumentType, 
                    string PaymentInstrumentEntity, 
                    string PaymentInstrumentNumber, 
                    string PaymentInstrumentCity, 
                    string PaymentInstrumentZipCode, 
                    string PaymentInstrumentMisscellExpiry, 
                    string PaymentInstrumentpayonDate, 
                    string PaymentInstrumentMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MobileWalletPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> MobileWalletPaymentAsync(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string ConversationID, 
                    string OriginateCountry, 
                    string OriginateCurrency, 
                    string ReceiverMSISDN, 
                    decimal SendingAmount, 
                    string ForexRate, 
                    string RecevingAmount, 
                    string SenderFirstName, 
                    string SenderLastName, 
                    string SenderMSISDN, 
                    string SenderDOB, 
                    string SenderPOB, 
                    string SenderDocumentType, 
                    string SenderDocumentNumber, 
                    string SenderIDIssueDate, 
                    string SenderIDExpiryDate, 
                    string SenderAddress, 
                    string SenderNationality, 
                    string SenderkycPurpose, 
                    string SenderkycSourceOfFunds, 
                    string SenderLocation, 
                    string PaymentInstrumentType, 
                    string PaymentInstrumentEntity, 
                    string PaymentInstrumentNumber, 
                    string PaymentInstrumentCity, 
                    string PaymentInstrumentZipCode, 
                    string PaymentInstrumentMisscellExpiry, 
                    string PaymentInstrumentpayonDate, 
                    string PaymentInstrumentMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Reconciliation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Reconciliation(string msgtype, int partyId, string userId, string password, int reqType, string fromDate, string todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Reconciliation", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ReconciliationAsync(string msgtype, int partyId, string userId, string password, int reqType, string fromDate, string todate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RemitServiceSoapChannel : ManualEFTProcessingSystem.UATRemitServiceReference.RemitServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemitServiceSoapClient : System.ServiceModel.ClientBase<ManualEFTProcessingSystem.UATRemitServiceReference.RemitServiceSoap>, ManualEFTProcessingSystem.UATRemitServiceReference.RemitServiceSoap {
        
        public RemitServiceSoapClient() {
        }
        
        public RemitServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemitServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemitServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemitServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode AccountEnquiry(int partyId, string userId, string password, string accountNo, string beneficiaryName) {
            return base.Channel.AccountEnquiry(partyId, userId, password, accountNo, beneficiaryName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> AccountEnquiryAsync(int partyId, string userId, string password, string accountNo, string beneficiaryName) {
            return base.Channel.AccountEnquiryAsync(partyId, userId, password, accountNo, beneficiaryName);
        }
        
        public System.Xml.XmlNode PartyAccountAvailableBalance(int partyId, string userId, string password) {
            return base.Channel.PartyAccountAvailableBalance(partyId, userId, password);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> PartyAccountAvailableBalanceAsync(int partyId, string userId, string password) {
            return base.Channel.PartyAccountAvailableBalanceAsync(partyId, userId, password);
        }
        
        public System.Xml.XmlNode Payment(
                    string msgtype, 
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryName, 
                    string senderName, 
                    string senderPhoneNo, 
                    string senderAddress, 
                    string senderCountry, 
                    string bankId, 
                    string branchId, 
                    System.DateTime paymentDate, 
                    string transferCurrency, 
                    decimal Amount, 
                    string benfcryinfo, 
                    string msgToBenfcry, 
                    string msgSource) {
            return base.Channel.Payment(msgtype, partyId, userId, password, RefNo, benfcryAccountNo, benfcryName, senderName, senderPhoneNo, senderAddress, senderCountry, bankId, branchId, paymentDate, transferCurrency, Amount, benfcryinfo, msgToBenfcry, msgSource);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> PaymentAsync(
                    string msgtype, 
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryName, 
                    string senderName, 
                    string senderPhoneNo, 
                    string senderAddress, 
                    string senderCountry, 
                    string bankId, 
                    string branchId, 
                    System.DateTime paymentDate, 
                    string transferCurrency, 
                    decimal Amount, 
                    string benfcryinfo, 
                    string msgToBenfcry, 
                    string msgSource) {
            return base.Channel.PaymentAsync(msgtype, partyId, userId, password, RefNo, benfcryAccountNo, benfcryName, senderName, senderPhoneNo, senderAddress, senderCountry, bankId, branchId, paymentDate, transferCurrency, Amount, benfcryinfo, msgToBenfcry, msgSource);
        }
        
        public System.Xml.XmlNode BEFTNPayment(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryAccountType, 
                    string benfcryName, 
                    string benfcryBankName, 
                    string benfcryBranchName, 
                    string routingNumber, 
                    string benfcryAddress, 
                    string senderName, 
                    string senderAddress, 
                    string transferCurrency, 
                    decimal Amount, 
                    string PaymentDescription) {
            return base.Channel.BEFTNPayment(partyId, userId, password, RefNo, benfcryAccountNo, benfcryAccountType, benfcryName, benfcryBankName, benfcryBranchName, routingNumber, benfcryAddress, senderName, senderAddress, transferCurrency, Amount, PaymentDescription);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> BEFTNPaymentAsync(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string benfcryAccountNo, 
                    string benfcryAccountType, 
                    string benfcryName, 
                    string benfcryBankName, 
                    string benfcryBranchName, 
                    string routingNumber, 
                    string benfcryAddress, 
                    string senderName, 
                    string senderAddress, 
                    string transferCurrency, 
                    decimal Amount, 
                    string PaymentDescription) {
            return base.Channel.BEFTNPaymentAsync(partyId, userId, password, RefNo, benfcryAccountNo, benfcryAccountType, benfcryName, benfcryBankName, benfcryBranchName, routingNumber, benfcryAddress, senderName, senderAddress, transferCurrency, Amount, PaymentDescription);
        }
        
        public System.Xml.XmlNode OTCPayment(int partyId, string userId, string password, string RefNo, string senderName, string senderPhoneNo, string senderAddress, string benfcryName, string benfcryAddress, string benfcryMobileno, decimal amount) {
            return base.Channel.OTCPayment(partyId, userId, password, RefNo, senderName, senderPhoneNo, senderAddress, benfcryName, benfcryAddress, benfcryMobileno, amount);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> OTCPaymentAsync(int partyId, string userId, string password, string RefNo, string senderName, string senderPhoneNo, string senderAddress, string benfcryName, string benfcryAddress, string benfcryMobileno, decimal amount) {
            return base.Channel.OTCPaymentAsync(partyId, userId, password, RefNo, senderName, senderPhoneNo, senderAddress, benfcryName, benfcryAddress, benfcryMobileno, amount);
        }
        
        public System.Xml.XmlNode StatusEnquiry(string msgtype, int partyId, string userId, string password, string RefNo) {
            return base.Channel.StatusEnquiry(msgtype, partyId, userId, password, RefNo);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> StatusEnquiryAsync(string msgtype, int partyId, string userId, string password, string RefNo) {
            return base.Channel.StatusEnquiryAsync(msgtype, partyId, userId, password, RefNo);
        }
        
        public System.Xml.XmlNode MobileWalletBeneficiaryValidationRequest(int partyId, string userId, string password, string msisdn, string firstName, string lastName, string fullName) {
            return base.Channel.MobileWalletBeneficiaryValidationRequest(partyId, userId, password, msisdn, firstName, lastName, fullName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> MobileWalletBeneficiaryValidationRequestAsync(int partyId, string userId, string password, string msisdn, string firstName, string lastName, string fullName) {
            return base.Channel.MobileWalletBeneficiaryValidationRequestAsync(partyId, userId, password, msisdn, firstName, lastName, fullName);
        }
        
        public System.Xml.XmlNode MobileWalletBeneficiaryValidationResponse(int partyId, string userId, string password, string ValidationResponseCallingReferanceNO) {
            return base.Channel.MobileWalletBeneficiaryValidationResponse(partyId, userId, password, ValidationResponseCallingReferanceNO);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> MobileWalletBeneficiaryValidationResponseAsync(int partyId, string userId, string password, string ValidationResponseCallingReferanceNO) {
            return base.Channel.MobileWalletBeneficiaryValidationResponseAsync(partyId, userId, password, ValidationResponseCallingReferanceNO);
        }
        
        public System.Xml.XmlNode MobileWalletPayment(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string ConversationID, 
                    string OriginateCountry, 
                    string OriginateCurrency, 
                    string ReceiverMSISDN, 
                    decimal SendingAmount, 
                    string ForexRate, 
                    string RecevingAmount, 
                    string SenderFirstName, 
                    string SenderLastName, 
                    string SenderMSISDN, 
                    string SenderDOB, 
                    string SenderPOB, 
                    string SenderDocumentType, 
                    string SenderDocumentNumber, 
                    string SenderIDIssueDate, 
                    string SenderIDExpiryDate, 
                    string SenderAddress, 
                    string SenderNationality, 
                    string SenderkycPurpose, 
                    string SenderkycSourceOfFunds, 
                    string SenderLocation, 
                    string PaymentInstrumentType, 
                    string PaymentInstrumentEntity, 
                    string PaymentInstrumentNumber, 
                    string PaymentInstrumentCity, 
                    string PaymentInstrumentZipCode, 
                    string PaymentInstrumentMisscellExpiry, 
                    string PaymentInstrumentpayonDate, 
                    string PaymentInstrumentMessage) {
            return base.Channel.MobileWalletPayment(partyId, userId, password, RefNo, ConversationID, OriginateCountry, OriginateCurrency, ReceiverMSISDN, SendingAmount, ForexRate, RecevingAmount, SenderFirstName, SenderLastName, SenderMSISDN, SenderDOB, SenderPOB, SenderDocumentType, SenderDocumentNumber, SenderIDIssueDate, SenderIDExpiryDate, SenderAddress, SenderNationality, SenderkycPurpose, SenderkycSourceOfFunds, SenderLocation, PaymentInstrumentType, PaymentInstrumentEntity, PaymentInstrumentNumber, PaymentInstrumentCity, PaymentInstrumentZipCode, PaymentInstrumentMisscellExpiry, PaymentInstrumentpayonDate, PaymentInstrumentMessage);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> MobileWalletPaymentAsync(
                    int partyId, 
                    string userId, 
                    string password, 
                    string RefNo, 
                    string ConversationID, 
                    string OriginateCountry, 
                    string OriginateCurrency, 
                    string ReceiverMSISDN, 
                    decimal SendingAmount, 
                    string ForexRate, 
                    string RecevingAmount, 
                    string SenderFirstName, 
                    string SenderLastName, 
                    string SenderMSISDN, 
                    string SenderDOB, 
                    string SenderPOB, 
                    string SenderDocumentType, 
                    string SenderDocumentNumber, 
                    string SenderIDIssueDate, 
                    string SenderIDExpiryDate, 
                    string SenderAddress, 
                    string SenderNationality, 
                    string SenderkycPurpose, 
                    string SenderkycSourceOfFunds, 
                    string SenderLocation, 
                    string PaymentInstrumentType, 
                    string PaymentInstrumentEntity, 
                    string PaymentInstrumentNumber, 
                    string PaymentInstrumentCity, 
                    string PaymentInstrumentZipCode, 
                    string PaymentInstrumentMisscellExpiry, 
                    string PaymentInstrumentpayonDate, 
                    string PaymentInstrumentMessage) {
            return base.Channel.MobileWalletPaymentAsync(partyId, userId, password, RefNo, ConversationID, OriginateCountry, OriginateCurrency, ReceiverMSISDN, SendingAmount, ForexRate, RecevingAmount, SenderFirstName, SenderLastName, SenderMSISDN, SenderDOB, SenderPOB, SenderDocumentType, SenderDocumentNumber, SenderIDIssueDate, SenderIDExpiryDate, SenderAddress, SenderNationality, SenderkycPurpose, SenderkycSourceOfFunds, SenderLocation, PaymentInstrumentType, PaymentInstrumentEntity, PaymentInstrumentNumber, PaymentInstrumentCity, PaymentInstrumentZipCode, PaymentInstrumentMisscellExpiry, PaymentInstrumentpayonDate, PaymentInstrumentMessage);
        }
        
        public System.Xml.XmlNode Reconciliation(string msgtype, int partyId, string userId, string password, int reqType, string fromDate, string todate) {
            return base.Channel.Reconciliation(msgtype, partyId, userId, password, reqType, fromDate, todate);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ReconciliationAsync(string msgtype, int partyId, string userId, string password, int reqType, string fromDate, string todate) {
            return base.Channel.ReconciliationAsync(msgtype, partyId, userId, password, reqType, fromDate, todate);
        }
    }
}
